#!/usr/bin/env php
<?php

declare(strict_types=1);

namespace Jascha030\Localphp\Bin;

use Exception;
use Psr\Container\ContainerExceptionInterface;
use Psr\Container\NotFoundExceptionInterface;
use RuntimeException;
use function Jascha030\Localphp\app;
use function Jascha030\Localphp\fail;
use function Jascha030\Localphp\output;

/**
 * Find and require autoload.php.
 */
$loader = static function (): void {
    $paths = [
        dirname(__FILE__, 2) . '/vendor',
        dirname(__FILE__, 4),
        getenv('HOME') . '/.composer/vendor',
    ];

    foreach ($paths as $path) {
        if (file_exists($path . '/autoload.php')) {
            require_once sprintf('%s/autoload.php', $path);

            return;
        }
    }

    throw new RuntimeException('Could not find autoload.php');
};

/**
 * Catch and write error to console in case autoloader was not found.
 */
try {
    $loader();
} catch (RuntimeException $e) {
    fwrite(STDOUT, $e->getMessage());

    return 1;
}

try {
    app()->run(output: output());
} catch (NotFoundExceptionInterface|ContainerExceptionInterface|Exception $e) {
    /** @noinspection PhpUnhandledExceptionInspection */
    return fail($e->getMessage());
}
